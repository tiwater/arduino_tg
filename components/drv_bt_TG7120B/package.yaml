
## 第一部分： 基础信息
name: drv_bt_TG7120B                               # <必选项> 包名称 （符合C语言变量命名规则），长度少于等于64字节
version: v7.4.7                                     # <必选项> 组件版本号
description: bt drirver                             # <必选项> 建议至少20字以上
type: common                                        # <必选项> 组件类型，为：solution, chip, board, common

tag: 第三方驱动                                     # <可选项> 组件分类，缺省值： ''
keywords:                                           # <可选项> 标签，会影响到组件被搜索的效果，合理的标签很重要
  - base
license: Apache license v2.0                        # <可选项> 源代码的许可证，要确保所有代码、文件的许可证不冲突。如：MIT，Apache license v2.0，BSD

## 第二部分：依赖信息
#           指定该组件依赖的组件及版本，版本支持条件比较，支持：>=v1.0, >v1.0, ==v1.0, <=v1.0, <v1.0, v1.0
#           未指定条件时，默认为 ==，如 v1.0 与 ==v1.0
# depends:                                 # <可选项> 该组件依赖其他的组件，合理的依赖才能保证组件能编译、使用
#   - minilibc: v7.2.0
#   - aos: >=v7.2.0
depends:

## 第四部分：编译连接信息
# build_config:                            # <可选项> 编译配置项
#   include:                               # <可选项> 编译时，影响编译器的-I 参数 ,全局有效
#     - src                                #        include 只能是该软件包下的目录，不能使用外部目录
#   internal_include:                      # <可选项> 编译时，影响编译器的-I 参数 ,组件内有效
#     - include
#   cflag: ''                              # <可选项> C 编译器所需要要的编译参数
#   cxxflag: ''                            # <可选项> CXX 编译器所需要要的编译参数
#   asmflag: ''                            # <可选项> 汇编器所需要要参数
#   define:                                # <可选项> 宏定义, 增加编译器的-D 选项,如：
#     XXX: 1                               #   -DXXX=1
#     AAA: 1                               #   -DAAA
#     STR: "abc"                           #   -DSTR="abc"
#   libs:                                  # 该组件中支持的二进制静态库,如：libxxx.a, libyyy.a
#     - xxx                                #   -lxxx
#     - yyy                                #   -lyyy
#   libpath:                               # 指定静态库所在的路径（相对于该组件路径）
#     - libs                               #   -Llibs
build_config:
  include:
    - ble/include
  internal_include:
    - include
  libs:
    - drv_bt_TG7120B_patch
  libpath:
    - ble/controller

# source_file:                             # <可选项> 指定参与编译的源代码文件，支持通配符，采用相对路径
#   - src/*.c                              # 例：组件 src 目录下所有的扩展名为 c 的源代码文件
source_file:
  - "ble/controller/*.c"
  - "TG7120B_hci.c"
  - "hci_api.c"
  - "bt_crypto.c"

## 第五部分：配置信息
def_config:                              # 组件的可配置项
   USE_ROMSYM_ALIAS: 1
   CONFIG_BT_CTLR_CRYPTO: 1
   CONFIG_LARGE_HEAP_SIZE: 4096
   CONFIG_BT_ACL_RX_COUNT: 3
   CONFIG_BT_L2CAP_RX_MTU: 131
   CONFIG_BT_L2CAP_TX_MTU: 131
   CONFIG_BT_AUTO_DATA_LEN_UPDATE: 1
   #CONFIG_BT_RECV_IS_RX_THREAD: 1
   CONFIG_BT_HCI_ACL_FLOW_CONTROL: 1
   CONFIG_BT_USE_HCI_API: 1
   CONFIG_BT_WHITELIST: 1
   CONFIG_BT_SCAN_WITH_IDENTITY: 1
   CONFIG_BT_DISCARDABLE_BUF_COUNT: 10
   CONFIG_BT_HCI_RX_STACK_SIZE: 1024

## 第六部分：安装信息
# install:
#   - dest: include/                       # 安装的目的路径 dest是相对路径，通常是相对于YoC SDK 安装目录
#     source:                              # 安装源列表
#      - src/*.h                           # 支持通配符，相对路径

## 第七部分：导出部分
# export:
#   - dest: "<SOLUTION_PATH>/generated/data" # 安装的目的路径 dest是相对路径
#     source:                                # 安装源列表
#       - "bootimgs/boot"
#       - "bootimgs/tee"
#       - "bootimgs/mtb"
#       - "configs/config.yaml"
